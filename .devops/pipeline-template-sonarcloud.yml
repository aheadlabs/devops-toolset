steps:
  - task: SonarCloudPrepare@1
    displayName: Prepare SonarCloud analysis (NON PR)
    condition: and(always(), ne(variables['Build.Reason'], 'PullRequest'))
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'ahead-labs'
      scannerMode: 'CLI'
      configMode: 'file'
      configFile: '.devops/sonar-project.properties'
      extraProperties: |
        sonar.branch.name=$(CURRENT_BRANCH)
        sonar.branch.target=dev
  - task: SonarCloudPrepare@1
    displayName: Prepare SonarCloud analysis (PR)
    condition: and(always(), eq(variables['Build.Reason'], 'PullRequest'))
    inputs:
      SonarCloud: 'SonarCloud'
      organization: 'ahead-labs'
      scannerMode: 'CLI'
      configMode: 'file'
      configFile: '.devops/sonar-project.properties'
      extraProperties: |
        sonar.pullrequest.branch=$(CURRENT_BRANCH)
        sonar.pullrequest.base=dev
  - task: SonarCloudAnalyze@1
    displayName: Run SonarCloud analysis
  - task: SonarCloudPublish@1
    displayName: Publish SonarCloud quality gate results
    inputs:
      pollingTimeoutSec: '300'
  - task: PythonScript@0
    displayName: Get quality gate status from SonarCloud
    inputs:
      scriptSource: 'inline'
      script: |
        import devops.sonarx
        devops.sonarx.get_quality_gate_status("$(System.DefaultWorkingDirectory)/.devops/sonar-project.properties", "$(SONAR_TOKEN)", "$(CURRENT_BRANCH)", "$(Build.Reason)" == "PullRequest")
      failOnStderr: true
