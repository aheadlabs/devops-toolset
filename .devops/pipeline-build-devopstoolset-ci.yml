# Pipeline /.devops/pipeline-build-devops-ci.yml

trigger:
  batch: true
  branches:
    include:
      - master
      - dev
      - feature/*
      - hotfix/*
      - release/*
pr:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

name: CI-$(date:yyyyMMdd)$(rev:.r)
jobs:
  - job: Package
    displayName: Package job
    steps:
    - task: PowerShell@2
      displayName: Parse project.xml
      inputs:
        filePath: '$(System.DefaultWorkingDirectory)/file-system/Read-ProjectXml.ps1'
        arguments: '-DevOpsPlatformCode ADO'
    - task: CmdLine@2
      displayName: Compile .po files
      inputs:
        script: |
          python3 $(System.DefaultWorkingDirectory)/locales/tools.py
    - task: CmdLine@2
      displayName: Unit test with pytest
      inputs:
        script: |
          python3 -m pip install â€“-upgrade pip
          python3 -m pip install wheel --upgrade
          python3 -m pip install pytest --upgrade
          python3 -m pip install pytest-cov --upgrade
          python3 -m pip list
          python3 -m pytest --junitxml=".pytest/test-results.xml" --cov="." --cov-report="xml" --cov-report="html"
    - task: PublishTestResults@2
      displayName: Publish unit test results
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '$(System.DefaultWorkingDirectory)/.pytest/test-results.xml'
    - task: PublishCodeCoverageResults@1
      displayName: Publish code coverage results
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/.pytest/coverage.xml'
    - task: SonarCloudPrepare@1
      displayName: Prepare SonarCloud analysis
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'ahead-labs'
        scannerMode: 'CLI'
        configMode: 'file'
        configFile: '.devops/sonar-project.properties'
    - task: SonarCloudAnalyze@1
      displayName: Run SonarCloud analysis
    - task: SonarCloudPublish@1
      displayName: Publish SonarCloud quality gate results
      inputs:
        pollingTimeoutSec: '300'
    - task: CopyFiles@2
      displayName: Copy files to artifact folder
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **
          !.git/**
          !.devops/**
          !.media/**
          !.gitignore
        TargetFolder: '$(Build.ArtifactStagingDirectory)/_artifact'
    - task: ArchiveFiles@2
      displayName: Zip artifact files
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/_artifact'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(ProjectName)-$(ProjectVersion).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      displayName: Publish artifact devops-toolset
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(ProjectName)-$(ProjectVersion).zip'
        ArtifactName: 'devops-toolset'
        publishLocation: 'Container'
    - task: Visual Studio IntelliCode Team Model Training@0
      displayName: Train IntelliCode model
      enabled: false
      inputs:
        branch: 'feature/pythonization'
        intelliCodeServiceEndpoint: 'IntelliCode'
