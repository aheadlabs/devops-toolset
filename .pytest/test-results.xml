<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="6" skipped="2" tests="308" time="7.040" timestamp="2021-04-14T19:43:00.136517" hostname="BlackHole"><testcase classname="src.core.tests.app_test" name="test_app_given_no_parameters_loads_gettext_engine" time="0.005" /><testcase classname="src.core.tests.app_test" name="test_app_given_skip_i18n_parameter_does_not_load_gettext_engine" time="0.002" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_given_filepath_when_exception_catch_then_logs_error" time="0.003" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_given_filepath_when_exception_catch_then_configure_by_default" time="0.003" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_given_filepath_then_calls_configure_by_file" time="0.004" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_given_filepath_then_add_colored_formatter" time="0.004" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_by_default_sets_root_logger_level" time="0.005" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_by_default_adds_streamhandler" time="0.003" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_by_default_logs_info" time="0.004" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_by_file_opens_filepath_in_read_mode" time="0.018" /><testcase classname="src.core.tests.log_setup_test" name="test_configure_by_file_calls_dict_config" time="0.002" /><testcase classname="src.core.tests.log_setup_test" name="test_add_filter_to_console_handler_given_loglevel_calls_add_filter" time="0.002" /><testcase classname="src.core.tests.log_setup_test" name="test_add_time_rotated_file_handler_given_filepath_adds_handler_to_the_log" time="0.005" /><testcase classname="src.core.tests.log_tools_test" name="test_log_list_given_list_of_log_str_when_list_is_invalid_then_not_log" time="0.001" /><testcase classname="src.core.tests.log_tools_test" name="test_log_list_given_list_of_log_str_and_loglevel_then_calls_logging_for_each_line" time="0.001" /><testcase classname="src.core.tests.log_tools_test" name="test_log_stdouterr_given_bytes_output_and_loglevel_then_calls_logging_decoding_lines_on_utf8" time="0.003" /><testcase classname="src.devops_platforms.azuredevops.tests.cli_test" name="test_download_artifact_from_feed_given_kwargs_when_not_azdevops_token_then_logs" time="0.004" /><testcase classname="src.devops_platforms.azuredevops.tests.cli_test" name="test_download_artifact_from_feed_given_kwargs_when_azdevops_token_calls_commands" time="0.003" /><testcase classname="src.devops_platforms.azuredevops.tests.environment_test" name="test_create_environment_variables_given_dict_when_not_empty_writes_to_stdout" time="0.002" /><testcase classname="src.devops_platforms.azuredevops.tests.environment_test" name="test_create_environment_variables_given_dict_writes_correct_format_to_stdout" time="0.003" /><testcase classname="src.devops_platforms.azuredevops.tests.environment_test" name="test_end_task_given_type_and_description_writes_to_stdout" time="0.005" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_generate_authentication_header_given_name_and_token_then_generate_header" time="0.001" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_call_api_given_command_and_credentials_when_status_code_is_200_then_return_response" time="0.004" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_call_api_given_command_and_credentials_when_status_code_is_not_200_then_raise_value_error" time="0.004" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_build_list_given_args_call_api_with_command_and_credentials" time="0.002" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_build_given_args_call_api_with_args" time="0.003" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_last_build_given_args_retrieves_build_id_and_calls_get_build" time="0.003" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_last_build_id_given_args_when_build_list_is_empty_then_return_none" time="0.002" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_last_build_id_given_args_when_build_list_is_not_empty_then_return_first_build_id" time="0.001" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_artifact_given_args_when_get_build_returns_download_url_then_calls_download_file" time="0.005" /><testcase classname="src.devops_platforms.azuredevops.tests.restapi_test" name="test_get_last_artifact_given_args_when_last_build_id_retrieved_then_calls_get_artifact" time="0.002" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_get_quality_gate_status_given_branch_then_generates_branch_segment" time="0.007" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_get_quality_gate_status_given_branch_then_reads_sonar_config_file" time="0.004" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_get_quality_gate_status_given_branch_when_passing_qg_then_logs_info" time="0.004" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_get_quality_gate_status_given_branch_when_not_passing_qg_then_logs_errors" time="0.005" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_read_sonar_properties_given_file_returns_tuple" time="0.018" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_generate_branch_segment_given_branch_when_pr_returns_pr_segment" time="0.002" /><testcase classname="src.devops_platforms.tests.sonarx_test" name="test_generate_branch_segment_given_branch_when_no_pr_returns_no_pr_segment" time="0.001" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_project_xml_data_when_add_environment_variables_is_false_then_return_dict_with_env_variables" time="0.003" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_project_xml_data_when_add_environment_variables_is_true_then_call_create_env_variables" time="0.005" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_theme_metadata_when_no_tokens_then_return_empty_dict" time="0.001" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_theme_metadata_when_tokens_matched_then_return_matches_dict" time="0.002" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_theme_metadata_when_token_and_not_matched_then_warns" time="0.005" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_theme_metadata_when_tokens_matched_and_add_environment_variables_then_call_create_env_variables" time="0.003" /><testcase classname="src.filesystem.tests.parsers_test" name="test_parse_json_file_load_json" time="0.007" /><testcase classname="src.filesystem.tests.paths_test" name="test_files_exist_given_empty_list_returns_empty_list" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_files_exist_given_list_returns_list_tuple[rglob_response0-expected0]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_files_exist_given_list_returns_list_tuple[rglob_response1-expected1]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_files_exist_given_list_returns_list_tuple[rglob_response2-expected2]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_files_exist_filtered[True-expected0]" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_files_exist_filtered[False-expected1]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_name_from_url_given_url_returns_file_name" time="0.003" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_path_from_pattern_recursive[rglob_response0-None]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_path_from_pattern_recursive[rglob_response1-/pathto/file1.json]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_path_from_pattern_recursive[rglob_response2-expected2]" time="0.003" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_path_from_pattern_no_recursive[glob_response0-None]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_path_from_pattern_no_recursive[glob_response1-/pathto/file1.json]" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_file_path_from_pattern_no_recursive[glob_response2-expected2]" time="0.004" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepaths_in_tree_given_starting_path_glob_when_no_paths_then_returns_empty_list" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepaths_in_tree_given_starting_path_glob_when_paths_then_returns_list" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepath_in_tree_ascending_given_file_name_when_exists_then_returns_path" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepath_in_tree_ascending_given_file_name_when_not_exist_then_returns_none" time="0.004" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepath_descending_in_tree_given_file_name_when_exists_then_returns_path" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepath_descending_in_tree_given_file_name_when_not_exist_but_paths_then_returns_path[rglob_return0-/deep/pathto]" time="0.003" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_filepath_descending_in_tree_given_file_name_when_not_exist_but_paths_then_returns_path[rglob_return1-/pathto]" time="0.003" /><testcase classname="src.filesystem.tests.paths_test" name="test_get_project_root_then_calls_get_file_path_in_tree_with_project_file" time="0.002" /><testcase classname="src.filesystem.tests.paths_test" name="test_is_empty_dir" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_is_valid_path_given_test_path_returns_true" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_is_valid_path_given_non_existent_path_returns_false" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_is_valid_path_given_invalid_path_returns_false" time="0.001" /><testcase classname="src.filesystem.tests.paths_test" name="test_move_files_if_recursive_use_rglob" time="0.005" /><testcase classname="src.filesystem.tests.paths_test" name="test_move_files_if_recursive_use_glob" time="0.005" /><testcase classname="src.filesystem.tests.paths_test" name="test_move_files_moves_n_files" time="0.008" /><testcase classname="src.filesystem.tests.tools_test" name="test_update_xml_file_entity_text_parse_file" time="0.006" /><testcase classname="src.filesystem.tests.tools_test" name="test_is_file_empty_given_path_when_empty_then_return_true[0-True]" time="0.004" /><testcase classname="src.filesystem.tests.tools_test" name="test_is_file_empty_given_path_when_empty_then_return_true[5-False]" time="0.002" /><testcase classname="src.filesystem.tests.zip_test" name="test_download_an_unzip_file_given_parameters_then_calls_extract_all" time="0.004" /><testcase classname="src.filesystem.tests.zip_test" name="test_download_an_unzip_file_given_parameters_when_unzip_root_is_present_then_move_files" time="0.009" /><testcase classname="src.filesystem.tests.zip_test" name="test_download_an_unzip_file_given_parameters_when_delete_after_unzip_is_present_then_remove_file_path" time="0.013" /><testcase classname="src.i18n.tests.utils_test" name="test_get_files_given_starting_path_and_glob_should_return_list_pathlib_rglob" time="0.006" /><testcase classname="src.i18n.tests.utils_test" name="test_compile_po_files_given_path_then_calls_get_files" time="0.004" /><testcase classname="src.i18n.tests.utils_test" name="test_compile_po_files_given_path_when_args_contain_py_then_calls_subprocess_with_dot_py" time="0.007" /><testcase classname="src.i18n.tests.utils_test" name="test_compile_po_files_given_path_when_args_not_contain_py_then_calls_subprocess_without_dot_py" time="0.002" /><testcase classname="src.i18n.tests.utils_test" name="test_compile_po_files_given_path_when_mo_file_exist_then_calls_os_remove" time="0.006" /><testcase classname="src.i18n.tests.utils_test" name="test_generate_pot_file_given_path_then_calls_get_files" time="0.003" /><testcase classname="src.i18n.tests.utils_test" name="test_generate_pot_file_given_path_when_args_contain_py_then_calls_popen_with_pygettext" time="0.008" /><testcase classname="src.i18n.tests.utils_test" name="test_generate_pot_file_given_path_when_args_not_py_then_calls_popen_with_xgettext" time="0.003" /><testcase classname="src.i18n.tests.utils_test" name="test_generate_pot_files_given_path_when_mo_file_exist_then_calls_os_remove" time="0.007" /><testcase classname="src.i18n.tests.utils_test" name="test_merge_pot_file_given_pot_file_should_call_msgmerge_command" time="0.003" /><testcase classname="src.i18n.tests.utils_test" name="test_merge_pot_file_given_pot_file_when_not_exist_should_call_generate_pot_file" time="0.005" /><testcase classname="src.project_types.linux.tests.apache_test" name="test_generate_htaccess_file_based_basic_auth_file_for_user_generates_htaccess_file" time="0.006" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_check_and_update_instance_software_given_software_config_when_no_content_then_avoid_call_to_install_package" time="0.002" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_check_and_update_instance_software_given_software_config_then_call_to_install_package" time="0.002" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_check_package_installed_given_package_when_package_exist_then_returns_true[/usr/bin/package_that_exists-True]" time="0.001" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_check_package_installed_given_package_when_package_exist_then_returns_true[None-False]" time="0.003" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_convert_version_parameter_given_value_then_return_parameter_value[None-]" time="0.001" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_convert_version_parameter_given_value_then_return_parameter_value[latest-]" time="0.001" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_convert_version_parameter_given_value_then_return_parameter_value[0.1---version &quot;0.1&quot;]" time="0.001" /><testcase classname="src.project_types.linux.tests.software_installer_test" name="test_install_package_given_package_and_version_then_calls_deb_package_install_command" time="0.002" /><testcase classname="src.project_types.node.tests.npm_test" name="test_convert_npm_extra_args_given_args_then_return_extra_args[value0- -- --arg1=arg1value --arg2=arg2value]" time="0.002" /><testcase classname="src.project_types.node.tests.npm_test" name="test_convert_npm_extra_args_given_args_then_return_extra_args[None-]" time="0.001" /><testcase classname="src.project_types.node.tests.npm_test" name="test_convert_npm_parameter_if_present_given_value_then_return_if_present[True---if-present]" time="0.001" /><testcase classname="src.project_types.node.tests.npm_test" name="test_convert_npm_parameter_if_present_given_value_then_return_if_present[False-]" time="0.001" /><testcase classname="src.project_types.node.tests.npm_test" name="test_convert_npm_parameter_silent_given_value_when_true_then_return_silent[True---silent]" time="0.001" /><testcase classname="src.project_types.node.tests.npm_test" name="test_convert_npm_parameter_silent_given_value_when_true_then_return_silent[False-]" time="0.002" /><testcase classname="src.project_types.node.tests.npm_test" name="test_run_script_given_command_then_calls_subprocess_with_npm_run_command" time="0.002" /><testcase classname="src.project_types.node.tests.npm_test" name="test_install_given_folder_then_calls_subprocess_with_npm_install_command" time="0.002" /><testcase classname="src.project_types.php.tests.parsers_test" name="test_parse_composer_json_data_given_path_when_none_then_get_default_composer_json_path" time="0.010" /><testcase classname="src.project_types.php.tests.parsers_test" name="test_parse_composer_json_data_given_parameters_when_add_environment_variables_then_call_create_env_variables" time="0.009" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_condition_met_should_return_true_when_cond_not_in_item_or_condition_not_when_parent_not_empty[item0-True]" time="0.003" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_condition_met_should_return_true_when_cond_not_in_item_or_condition_not_when_parent_not_empty[item1-True]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_condition_met_given_parameters_should_call_is_empty_dir_result" time="0.002" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_add_item_given_parameters_should_call_condition_met_when_item_has_children_object" time="0.005" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_add_item_given_parameters_when_child_condition_is_false_and_have_children_then_calls_recursive_add_item" time="0.002" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_add_item_given_parameters_when_child_condition_and_type_is_directory_should_call_os_mkdir" time="0.003" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_add_item_given_parameters_when_child_condition_and_type_is_file_should_create_empty_file" time="0.007" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_add_item_given_parameters_when_child_condition_and_type_is_file_should_create_content_file" time="0.007" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_get_default_content_given_item_when_source_then_return_corresponding_value[item0-some_raw_value]" time="0.039" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_get_default_content_given_item_when_source_then_return_corresponding_value[item1-some_from_file_value]" time="0.008" /><testcase classname="src.project_types.wordpress.tests.basic_structure_starter_test" name="test_get_default_content_given_item_when_source_then_return_corresponding_value[item2-sample text response]" time="0.009"><failure message="AssertionError: assert &lt;MagicMock na...521289944944'&gt; == 'sample text response'&#10;  +&lt;MagicMock name='get().text' id='2521289944944'&gt;&#10;  -'sample text response'">file_mock = &lt;MagicMock name='open' spec='builtin_function_or_method' id='2521289849440'&gt;, item = {'name': 'url_name', 'source': 'from_url', 'value': 'url_resource'}, expected_value = 'sample text response', wordpressdata = &lt;src.project_types.wordpress.tests.conftest.WordPressData object at 0x0000024B089BD520&gt;
mocks = &lt;src.conftest.Mocks object at 0x0000024B0895F8B0&gt;

    @pytest.mark.parametrize('item, expected_value', [
        ({"source": "raw", "name": "raw_name", "value": "some_raw_value"}, "some_raw_value"),
        ({"source": "from_file", "name": "file_name", "value": "file"}, "some_from_file_value"),
        ({"source": "from_url", "name": "url_name", "value": "url_resource"}, "sample text response")])
    @patch('builtins.open', new_callable=mock_open, read_data="some_from_file_value")
    def test_get_default_content_given_item_when_source_then_return_corresponding_value(
            file_mock, item, expected_value, wordpressdata, mocks):
        """Given item when source has value raw, then return value content"""
        # Arrange
        mocks.requests_get_mock.side_effect = mocked_requests_get
        # Act
        result = BasicStructureStarter.get_default_content(item)
        # Assert
&gt;       assert result == expected_value
E       AssertionError: assert &lt;MagicMock na...521289944944'&gt; == 'sample text response'
E         +&lt;MagicMock name='get().text' id='2521289944944'&gt;
E         -'sample text response'

src\project_types\wordpress\tests\basic_structure_starter_test.py:162: AssertionError</failure></testcase><testcase classname="src.project_types.wordpress.tests.bootstrap_repository_test" name="test_main_given_given_arguments_then_call_dependencies" time="0.004" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_main_given_required_files_when_not_present_and_localhost_and_no_defaults_then_raise_error" time="0.006" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_main_given_required_files_when_present_then_calls_wptools_get_required_file_paths" time="0.027" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_main_given_required_files_when_present_and_create_db_then_calls_setup_database" time="0.024" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_main_given_required_files_when_not_present_and_use_defaults_then_download_required_files" time="0.034"><failure message="AssertionError: Calls not found.&#10;Expected: [call(b'sample response in bytes')]&#10;Actual: [call(&lt;MagicMock name='get().content' id='2521292567360'&gt;)]">move_files_mock = &lt;MagicMock name='move_files' id='2521291139680'&gt;, convert_wp_config_token_mock = &lt;MagicMock name='convert_wp_config_token' id='2521292043216'&gt;, create_users_mock = &lt;MagicMock name='create_users' id='2521292055264'&gt;, add_wp_options_mock = &lt;MagicMock name='add_wp_options' id='2521292071456'&gt;
get_environment_mock = &lt;MagicMock name='get_environment' id='2521292083552'&gt;, constants_mock = &lt;MagicMock name='get_constants' id='2521292099744'&gt;, files_exist_mock = &lt;MagicMock name='files_exist_filtered' id='2521292111776'&gt;, get_themes_path_mock = &lt;MagicMock name='get_themes_path_from_root_path' id='2521292132064'&gt;
get_required_files_mock = &lt;MagicMock name='get_required_file_paths' id='2521292144160'&gt;, get_site_config_mock = &lt;MagicMock name='get_site_configuration' id='2521292010016'&gt;, get_wordpress_path = &lt;MagicMock name='get_wordpress_path_from_root_path' id='2521291446256'&gt;
start_basic_structure_mock = &lt;MagicMock name='start_basic_project_structure' id='2521292156880'&gt;, setup_devops_toolset_mock = &lt;MagicMock name='setup_devops_toolset' id='2521291436240'&gt;, download_wordpress_mock = &lt;MagicMock name='download_wordpress' id='2521291873824'&gt;
set_wordpress_config_mock = &lt;MagicMock name='set_wordpress_config_from_configuration_file' id='2521292172592'&gt;, install_wordpress_site_mock = &lt;MagicMock name='install_wordpress_site' id='2521292184688'&gt;, install_theme_mock = &lt;MagicMock name='install_themes_from_configuration_file' id='2521292200880'&gt;
install_plugins_mock = &lt;MagicMock name='install_plugins_from_configuration_file' id='2521292212976'&gt;, build_theme_mock = &lt;MagicMock name='build_theme' id='2521292229168'&gt;, prompt_yn_mock = &lt;MagicMock name='yn' id='2521292245360'&gt;, log_indented_mock = &lt;MagicMock name='log_indented_list' id='2521292261552'&gt;
generate_environments_mock = &lt;MagicMock name='generate_additional_wpconfig_files' id='2521292277744'&gt;, delete_sample_mock = &lt;MagicMock name='delete_sample_wp_config_file' id='2521292289840'&gt;, export_database_mock = &lt;MagicMock name='export_database' id='2521292301936'&gt;, purge_gitkeep_mock = &lt;MagicMock name='purge_gitkeep' id='2521292322224'&gt;
import_content_mock = &lt;MagicMock name='import_content_from_configuration_file' id='2521292334320'&gt;, wordpressdata = &lt;src.project_types.wordpress.tests.conftest.WordPressData object at 0x0000024B08A8DD60&gt;, mocks = &lt;src.conftest.Mocks object at 0x0000024B08A90CA0&gt;

    @patch("project_types.wordpress.wptools.import_content_from_configuration_file")
    @patch("tools.git.purge_gitkeep")
    @patch("project_types.wordpress.wptools.export_database")
    @patch("project_types.wordpress.generate_wordpress.delete_sample_wp_config_file")
    @patch("project_types.wordpress.generate_wordpress.generate_additional_wpconfig_files")
    @patch("core.log_tools.log_indented_list")
    @patch("clint.textui.prompt.yn")
    @patch("project_types.wordpress.wp_theme_tools.build_theme")
    @patch("project_types.wordpress.wptools.install_plugins_from_configuration_file")
    @patch("project_types.wordpress.wp_theme_tools.install_themes_from_configuration_file")
    @patch("project_types.wordpress.wptools.install_wordpress_site")
    @patch("project_types.wordpress.wptools.set_wordpress_config_from_configuration_file")
    @patch("project_types.wordpress.wptools.download_wordpress")
    @patch("project_types.wordpress.generate_wordpress.setup_devops_toolset")
    @patch("project_types.wordpress.wptools.start_basic_project_structure")
    @patch("project_types.wordpress.wptools.get_wordpress_path_from_root_path")
    @patch("project_types.wordpress.wptools.get_site_configuration")
    @patch("project_types.wordpress.wptools.get_required_file_paths")
    @patch("project_types.wordpress.wp_theme_tools.get_themes_path_from_root_path")
    @patch("filesystem.paths.files_exist_filtered")
    @patch("project_types.wordpress.wptools.get_constants")
    @patch("project_types.wordpress.wptools.get_environment")
    @patch("project_types.wordpress.wptools.add_wp_options")
    @patch("project_types.wordpress.wptools.create_users")
    @patch("project_types.wordpress.wptools.convert_wp_config_token")
    @patch("filesystem.paths.move_files")
    def test_main_given_required_files_when_not_present_and_use_defaults_then_download_required_files(
            move_files_mock, convert_wp_config_token_mock, create_users_mock, add_wp_options_mock,
            get_environment_mock, constants_mock, files_exist_mock, get_themes_path_mock, get_required_files_mock,
            get_site_config_mock, get_wordpress_path, start_basic_structure_mock, setup_devops_toolset_mock,
            download_wordpress_mock, set_wordpress_config_mock, install_wordpress_site_mock, install_theme_mock,
            install_plugins_mock, build_theme_mock, prompt_yn_mock, log_indented_mock, generate_environments_mock,
            delete_sample_mock, export_database_mock, purge_gitkeep_mock, import_content_mock, wordpressdata, mocks):
        """ Given root_path, when required files present in root_path, then calls get_required_file_paths"""
        # Arrange
        required_files = list(map(lambda x: f"*{x[1]}", constants.required_files_suffixes.items()))
        files_exist_mock.return_value = required_files
        prompt_yn_mock.return_value = True
        environment = "any"
        mocks.requests_get_mock.side_effect = mocked_requests_get
        root_path = wordpressdata.root_path
        m = mock_open()
        expected_content = b"sample response in bytes"
        # Act
        with patch(wordpressdata.builtins_open, m, create=True):
            sut.main(root_path, "root", "root", "root", environment, [''], [''], False, True, False)
            # Assert
            handler = m()
            calls = []
            # Build equal number of calls as required files we have: The content will be the same since we mocked it.
            while len(calls) != len(required_files):
                calls.append(call(expected_content))
&gt;           handler.write.assert_has_calls(calls)

src\project_types\wordpress\tests\generate_wordpress_test.py:184: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;MagicMock name='open().write' id='2521292351616'&gt;, calls = [call(b'sample response in bytes')], any_order = False

    def assert_has_calls(self, calls, any_order=False):
        """assert the mock has been called with the specified calls.
        The `mock_calls` list is checked for the calls.
    
        If `any_order` is False (the default) then the calls must be
        sequential. There can be extra calls before or after the
        specified calls.
    
        If `any_order` is True then the calls can be in any order, but
        they must all appear in `mock_calls`."""
        expected = [self._call_matcher(c) for c in calls]
        cause = next((e for e in expected if isinstance(e, Exception)), None)
        all_calls = _CallList(self._call_matcher(c) for c in self.mock_calls)
        if not any_order:
            if expected not in all_calls:
                if cause is None:
                    problem = 'Calls not found.'
                else:
                    problem = ('Error processing expected calls.\n'
                               'Errors: {}').format(
                                   [e if isinstance(e, Exception) else None
                                    for e in expected])
&gt;               raise AssertionError(
                    f'{problem}\n'
                    f'Expected: {_CallList(calls)}'
                    f'{self._calls_repr(prefix="Actual").rstrip(".")}'
                ) from cause
E               AssertionError: Calls not found.
E               Expected: [call(b'sample response in bytes')]
E               Actual: [call(&lt;MagicMock name='get().content' id='2521292567360'&gt;)]

c:\users\cr_al\appdata\local\programs\python\python39\lib\unittest\mock.py:944: AssertionError</failure></testcase><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_main_given_required_files_when_create_development_theme_then_calls_create_development_theme" time="0.030" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_delete_sample_wp_config_file_when_file_not_exist_then_remove" time="0.002" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_delete_sample_wp_config_file_when_file_exist_then_remove" time="0.002" /><testcase classname="src.project_types.wordpress.tests.generate_wordpress_test" name="test_setup_devops_toolset_given_root_path_then_call_update_devops_toolset" time="0.004" /><testcase classname="src.project_types.wordpress.tests.parse_theme_metadata_test" name="test_parse_theme_metadata_from_path_when_path_exists_then_calls_parse_theme_metadata" time="0.005" /><testcase classname="src.project_types.wordpress.tests.rollback_database_test" name="test_main" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_add_update_option_should_check_if_exists" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_add_update_option_when_exists_calls_update_function" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_add_update_option_when_not_exists_calls_add_function" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_add_update_option_should_update_permalinks_when_structure_is_updated" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_add_database_option_should_check_if_exists" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_add_database_option_when_not_exists_calls_add_function" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_exists_returns_boolean[True-value\n-expected0]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_exists_returns_boolean[False-None-expected1]" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_is_valid[name--True-True]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_is_valid[name-None-True-False]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_is_valid[-value-True-False]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_is_valid[None-value-True-False]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_check_if_option_is_valid[name-value-None-False]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_autoload[True---autoload=yes]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_autoload[False---autoload=no]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_db_user[user---dbuser=&quot;user&quot;]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_db_user[-]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_db_user[None-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_db_pass[password---dbpass=&quot;password&quot;]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_db_pass[-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_db_pass[None-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_activate[True---activate]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_activate[False-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_admin_password_when_admin_pass_then_return_admin_pass_parameter[my-admin-password---admin_password=&quot;my-admin-password&quot;]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_admin_password_when_admin_pass_then_return_admin_pass_parameter[-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_content[True-no]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_content[False-yes]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_debug[True---debug]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_debug[False-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_force[True---force]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_force[False-]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_raw[True---raw]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_raw[False-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_skip_check[True---skip-check]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_skip_check[False-]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_skip_content[True---skip-content]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_skip_content[False-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_skip_email[True---skip-email]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_skip_email[False-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_yes[True---yes]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_convert_wp_parameter_yes[False-]" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_import_database" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_reset_database" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_reset_transients" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_wp_cli_info" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_create_wordpress_database_user" time="0.001"><skipped type="pytest.skip" message="Need to fix this test">C:\Workspace\_devops-toolset\src\project_types\wordpress\tests\wp_cli_test.py:558: Need to fix this test</skipped></testcase><testcase classname="src.project_types.wordpress.tests.wp_cli_test" name="test_export_content_to_wxr" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_build_theme_given_site_config_when_no_src_themes_then_logs" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_build_theme_given_site_config_when_src_themes_then_calls_npm_install" time="0.040" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_build_theme_given_site_config_when_src_themes_then_chdir_to_source" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_build_theme_given_site_config_when_src_themes_then_calls_subprocess_with_build_command" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_build_theme_given_site_config_when_src_themes_then_zips_dist" time="0.010" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_build_theme_given_site_config_when_no_path_themes_src_then_logs_error" time="0.006" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_themes_configuration_given_themes_when_wrong_number_of_themes_then_return_false[[]-False]" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_themes_configuration_given_themes_when_wrong_number_of_themes_then_return_false[[{&quot;name&quot;:&quot;theme1&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;source&quot;:&quot;source1.zip&quot;},{&quot;name&quot;:&quot;theme2&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;source&quot;:&quot;source2.zip&quot;},{&quot;name&quot;:&quot;theme3&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;source&quot;:&quot;source3.zip&quot;}]-False]" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_themes_configuration_given_themes_when_wrong_number_of_activated_themes_then_return_false[[{&quot;name&quot;:&quot;theme1&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;activate&quot;:true,&quot;source&quot;:&quot;source1.zip&quot;},{&quot;name&quot;:&quot;theme2&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;activate&quot;:true,&quot;source&quot;:&quot;source2.zip&quot;}]-False]" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_themes_configuration_given_themes_when_wrong_number_of_activated_themes_then_return_false[[{&quot;name&quot;:&quot;theme1&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;activate&quot;:false,&quot;source&quot;:&quot;source1.zip&quot;},{&quot;name&quot;:&quot;theme2&quot;,&quot;source_type&quot;:&quot;zip&quot;,&quot;activate&quot;:false,&quot;source&quot;:&quot;source2.zip&quot;}]-False]" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_themes_configuration_given_themes_when_correct_then_return_true" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_theme_configuration_given_theme_when_feed_expected_and_not_source_type_feed_then_returns_false[{&quot;name&quot;:&quot;theme&quot;,&quot;source_type&quot;:&quot;feed&quot;,&quot;activate&quot;:true,&quot;source&quot;:&quot;source1.zip&quot;}-False]" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_check_theme_configuration_given_theme_when_feed_expected_and_not_source_type_feed_then_returns_false[{&quot;name&quot;:&quot;theme&quot;,&quot;source_type&quot;:&quot;feed&quot;,&quot;activate&quot;:true,&quot;source&quot;:&quot;source1.zip&quot;,&quot;feed&quot;: {&quot;name&quot;: &quot;testfeed&quot;, &quot;organization_url&quot;: &quot;https://dev.azure.com/organization/&quot;, &quot;package&quot;: &quot;testpackage&quot;, &quot;version&quot;: &quot;1.0&quot;}}-True]" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_create_development_theme_given_theme_config_when_no_src_theme_then_should_log_warning" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_create_development_theme_given_theme_config_when_src_theme_then_should_start_basic_theme_structure" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_create_development_theme_given_theme_config_when_src_theme_then_should_set_theme_metadata" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_download_wordpress_theme_given_theme_config_when_source_type_is_feed_then_calls_get_last_artifact" time="0.007" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_download_wordpress_theme_given_theme_config_when_source_type_is_feed_and_not_kwargs_then_warns" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_download_wordpress_theme_given_theme_config_when_source_type_is_url_then_calls_paths_download_file" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_install_theme_given_configuration_file_when_wrong_themes_configuration_then_return" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_install_theme_given_configuration_file_when_no_parent_theme_then_install_once" time="0.009" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_replace_theme_meta_data_in_package_file_given_src_theme_then_replace_data_in_file_path" time="0.009" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_replace_theme_meta_data_in_scss_file_given_src_theme_then_replace_data_in_file_path" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_replace_theme_slug_in_functions_php_given_src_theme_then_replace_data_in_core_functions_php" time="0.009" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_replace_theme_meta_data_given_path_and_replacements_then_replaces_file_matches_with_regex" time="0.011" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_set_theme_metadata_given_src_theme_config_then_calls_replace_theme_metadata_in_scss_file" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_set_theme_metadata_given_src_theme_config_then_calls_replace_theme_metadata_in_package_json_file" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_set_theme_metadata_given_src_theme_config_then_calls_replace_theme_slug_in_functions_php_file" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_start_basic_theme_structure_given_structure_file_path_when_exists_then_gets_site_configuration" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wp_theme_tools_test" name="test_start_basic_theme_structure_given_structure_file_path_when_not_exists_then_gets_project_structure" time="0.006" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_add_wp_options_given_options_then_calls_wp_cli_add_update_option" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_convert_wp_config_token_given_token_when_no_match_then_return_bare_token" time="0.001" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_convert_wp_config_token_given_token_when_date_match_then_calls_wp_cli_eval_code" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_create_wp_cli_bat_file_given_phar_path_creates_bat_file_with_specific_content" time="0.013" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_create_configuration_file_then_calls_wp_cli_create_configuration_with_database_parameters" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_download_wordpress_given_invalid_path_raises_valueerror" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_download_wordpress_given_valid_arguments_calls_subprocess" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_export_database_calls_wp_cli_export_database" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_get_environment_given_env_name_when_not_match_then_raises_value_error" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_get_environment_given_env_name_when_multiple_match_then_warns" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_get_environment_given_site_config_then_update_url_constants" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_get_project_structure_given_resource_reads_and_parses_content" time="0.007"><failure message="assert &lt;MagicMock na...521289289984'&gt; == '{&quot;$schema&quot;:&quot;...EADME.md&quot;}}]}'&#10;  +&lt;MagicMock name='get().json()' id='2521289289984'&gt;&#10;  -'{&quot;$schema&quot;:&quot;http://dev.aheadlabs.com/schemas/json/project-structure-schema.json&quot;,&quot;items&quot;:[{&quot;name&quot;:&quot;.devops&quot;,&quot;type&quot;:&quot;directory&quot;,&quot;children&quot;:[{&quot;name&quot;:&quot;.gitkeep&quot;,&quot;type&quot;:&quot;file&quot;,&quot;condition&quot;:&quot;when-parent-not-empty&quot;}]},{&quot;name&quot;:&quot;.media&quot;,&quot;type&quot;:&quot;directory&quot;,&quot;children&quot;:[{&quot;name&quot;:&quot;.gitkeep&quot;,&quot;type&quot;:&quot;file&quot;,&quot;condition&quot;:&quot;when-parent-not-empty&quot;}]},{&quot;name&quot;:&quot;content&quot;,&quot;type&quot;:&quot;directory&quot;,&quot;children&quot;:[{&quot;name&quot;:&quot;themes&quot;,&quot;type&quot;:&quot;directory&quot;,&quot;children&quot;:[{&quot;name&quot;:&quot;.gitkeep&quot;,&quot;type&quot;:&quot;file&quot;,&quot;condition&quot;:&quot;when-parent-not-empty&quot;}]}]},{&quot;name&quot;:&quot;database&quot;,&quot;t...&#10;  &#10;  ...Full output truncated (1 line hidden), use '-vv' to show">wordpressdata = &lt;src.project_types.wordpress.tests.conftest.WordPressData object at 0x0000024B088D7160&gt;, mocks = &lt;src.conftest.Mocks object at 0x0000024B088D7190&gt;

    def test_get_project_structure_given_resource_reads_and_parses_content(wordpressdata, mocks):
        """Given a path, reads the file obtained from the resource and parses the JSON content."""
    
        # Arrange
        url_resource = wordpressdata.url_resource
        mocks.requests_get_mock.side_effect = mocked_requests_get_json_content
    
        # Act
        result = sut.get_project_structure(url_resource)
    
        # Assert
&gt;       assert result == WordPressData.structure_file_content
E       assert &lt;MagicMock na...521289289984'&gt; == '{"$schema":"...EADME.md"}}]}'
E         +&lt;MagicMock name='get().json()' id='2521289289984'&gt;
E         -'{"$schema":"http://dev.aheadlabs.com/schemas/json/project-structure-schema.json","items":[{"name":".devops","type":"directory","children":[{"name":".gitkeep","type":"file","condition":"when-parent-not-empty"}]},{"name":".media","type":"directory","children":[{"name":".gitkeep","type":"file","condition":"when-parent-not-empty"}]},{"name":"content","type":"directory","children":[{"name":"themes","type":"directory","children":[{"name":".gitkeep","type":"file","condition":"when-parent-not-empty"}]}]},{"name":"database","t...
E         
E         ...Full output truncated (1 line hidden), use '-vv' to show

src\project_types\wordpress\tests\wptools_test.py:250: AssertionError</failure></testcase><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_get_required_file_paths" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_get_site_configuration_reads_json" time="0.007" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_import_content_from_configuration_file_given_args_then_call_delete_post_type_content" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_import_content_from_configuration_file_given_args_then_call_import_wxr_content[create]" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_import_content_from_configuration_file_given_args_then_call_import_wxr_content[skip]" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_import_content_from_configuration_file_given_args_then_call_import_wxr_content[mapping.csv]" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_import_content_from_configuration_file_given_args_when_no_content_then_return_without_import" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_import_content_from_configuration_file_given_args_when_empty_content_then_no_import" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_plugins_given_configuration_file_when_no_plugins_then_no_install" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_plugins_given_configuration_file_when_plugins_present_then_install_plugins[plugins_content0]" time="0.010" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_plugins_given_configuration_file_when_plugins_present_then_install_plugins[plugins_content1]" time="0.006" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_plugins_given_configuration_file_when_plugins_present_then_install_plugins[plugins_content2]" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wp_cli_given_path_when_not_dir_then_raise_value_error" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wp_cli_given_path_when_is_dir_then_downloads_from_request_resource" time="0.026"><failure message="AssertionError: 'get' does not contain all of (call('https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar'),) in its call list, found [call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop()] instead">log_info_mock = &lt;MagicMock name='info' id='2521293314080'&gt;, wp_cli_info = &lt;MagicMock name='wp_cli_info' id='2521293321456'&gt;, create_wp_cli_bat_file = &lt;MagicMock name='create_wp_cli_bat_file' id='2521293271968'&gt;, pathlib_mock = &lt;MagicMock name='Path' id='2521293308592'&gt;
wordpressdata = &lt;src.project_types.wordpress.tests.conftest.WordPressData object at 0x0000024B08CAD6A0&gt;, mocks = &lt;src.conftest.Mocks object at 0x0000024B08CAD700&gt;

    @patch("pathlib.Path")
    @patch("project_types.wordpress.wptools.create_wp_cli_bat_file")
    @patch("project_types.wordpress.wp_cli.wp_cli_info")
    @patch("logging.info")
    def test_install_wp_cli_given_path_when_is_dir_then_downloads_from_request_resource(
            log_info_mock, wp_cli_info, create_wp_cli_bat_file, pathlib_mock, wordpressdata, mocks):
        """ Given a file path, when path is a dir, then downloads from download url """
        # Arrange
        install_path = wordpressdata.wp_cli_install_path
        pathlib_mock.return_value = install_path
        mocks.requests_get_mock.side_effect = mocked_requests_get
        wp_cli_phar = "wp-cli.phar"
        wp_cli_download_url = f"https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/{wp_cli_phar}"
        with patch(wordpressdata.builtins_open, mock_open()):
            with patch.object(os, "stat"):
                with patch.object(os, "chmod"):
                    # Act
                    sut.install_wp_cli(install_path)
                    # Assert
                    calls = [call(wp_cli_download_url)]
&gt;                   mocks.requests_get_mock.assert_has_calls(calls, any_order=True)

src\project_types\wordpress\tests\wptools_test.py:485: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;MagicMock name='get' id='2521267994432'&gt;, calls = [call('https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar')], any_order = True

    def assert_has_calls(self, calls, any_order=False):
        """assert the mock has been called with the specified calls.
        The `mock_calls` list is checked for the calls.
    
        If `any_order` is False (the default) then the calls must be
        sequential. There can be extra calls before or after the
        specified calls.
    
        If `any_order` is True then the calls can be in any order, but
        they must all appear in `mock_calls`."""
        expected = [self._call_matcher(c) for c in calls]
        cause = next((e for e in expected if isinstance(e, Exception)), None)
        all_calls = _CallList(self._call_matcher(c) for c in self.mock_calls)
        if not any_order:
            if expected not in all_calls:
                if cause is None:
                    problem = 'Calls not found.'
                else:
                    problem = ('Error processing expected calls.\n'
                               'Errors: {}').format(
                                   [e if isinstance(e, Exception) else None
                                    for e in expected])
                raise AssertionError(
                    f'{problem}\n'
                    f'Expected: {_CallList(calls)}'
                    f'{self._calls_repr(prefix="Actual").rstrip(".")}'
                ) from cause
            return
    
        all_calls = list(all_calls)
    
        not_found = []
        for kall in expected:
            try:
                all_calls.remove(kall)
            except ValueError:
                not_found.append(kall)
        if not_found:
&gt;           raise AssertionError(
                '%r does not contain all of %r in its call list, '
                'found %r instead' % (self._mock_name or 'mock',
                                      tuple(not_found), all_calls)
            ) from cause
E           AssertionError: 'get' does not contain all of (call('https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar'),) in its call list, found [call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop()] instead

c:\users\cr_al\appdata\local\programs\python\python39\lib\unittest\mock.py:960: AssertionError</failure></testcase><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wp_cli_given_path_when_is_dir_then_writes_response_content" time="0.039"><failure message="AssertionError: expected call not found.&#10;Expected: write(b'sample response in bytes')&#10;Actual: write(&lt;MagicMock name='get().content' id='2521292567360'&gt;)">log_info_mock = &lt;MagicMock name='info' id='2521289220496'&gt;, wp_cli_info = &lt;MagicMock name='wp_cli_info' id='2521289261168'&gt;, create_wp_cli_bat_file = &lt;MagicMock name='create_wp_cli_bat_file' id='2521293340192'&gt;, pathlib_mock = &lt;MagicMock name='Path' id='2521290485920'&gt;
wordpressdata = &lt;src.project_types.wordpress.tests.conftest.WordPressData object at 0x0000024B088C6D00&gt;, mocks = &lt;src.conftest.Mocks object at 0x0000024B088C6310&gt;

    @patch("pathlib.Path")
    @patch("project_types.wordpress.wptools.create_wp_cli_bat_file")
    @patch("project_types.wordpress.wp_cli.wp_cli_info")
    @patch("logging.info")
    def test_install_wp_cli_given_path_when_is_dir_then_writes_response_content(
            log_info_mock, wp_cli_info, create_wp_cli_bat_file, pathlib_mock, wordpressdata, mocks):
        """ Given a file path, when path is a dir, then writes response content to
        file_path """
        # Arrange
        install_path = wordpressdata.wp_cli_install_path
        pathlib_mock.return_value = install_path
        mocks.requests_get_mock.side_effect = mocked_requests_get
        expected_content = b"sample response in bytes"
        m = mock_open()
        with patch(wordpressdata.builtins_open, m, create=True):
            with patch.object(os, "stat"):
                with patch.object(os, "chmod"):
                    # Act
                    sut.install_wp_cli(install_path)
                    # Assert
                    handler = m()
&gt;                   handler.write.assert_called_once_with(expected_content)

src\project_types\wordpress\tests\wptools_test.py:509: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
c:\users\cr_al\appdata\local\programs\python\python39\lib\unittest\mock.py:919: in assert_called_once_with
    return self.assert_called_with(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;MagicMock name='open().write' id='2521293125808'&gt;, args = (b'sample response in bytes',), kwargs = {}, expected = call(b'sample response in bytes'), actual = call(&lt;MagicMock name='get().content' id='2521292567360'&gt;), _error_message = &lt;function NonCallableMock.assert_called_with.&lt;locals&gt;._error_message at 0x0000024B08DAC790&gt;, cause = None

    def assert_called_with(self, /, *args, **kwargs):
        """assert that the last call was made with the specified arguments.
    
        Raises an AssertionError if the args and keyword args passed in are
        different to the last call to the mock."""
        if self.call_args is None:
            expected = self._format_mock_call_signature(args, kwargs)
            actual = 'not called.'
            error_message = ('expected call not found.\nExpected: %s\nActual: %s'
                    % (expected, actual))
            raise AssertionError(error_message)
    
        def _error_message():
            msg = self._format_mock_failure_message(args, kwargs)
            return msg
        expected = self._call_matcher(_Call((args, kwargs), two=True))
        actual = self._call_matcher(self.call_args)
        if actual != expected:
            cause = expected if isinstance(expected, Exception) else None
&gt;           raise AssertionError(_error_message()) from cause
E           AssertionError: expected call not found.
E           Expected: write(b'sample response in bytes')
E           Actual: write(&lt;MagicMock name='get().content' id='2521292567360'&gt;)

c:\users\cr_al\appdata\local\programs\python\python39\lib\unittest\mock.py:907: AssertionError</failure></testcase><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wp_cli_given_path_when_is_dir_then_chmods_written_file_path" time="0.010" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wp_cli_given_path_when_is_dir_then_calls_subprocess_wpcli_info_command" time="0.010" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wordpress_core_then_calls_cli_install_wordpress_core" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wordpress_site_then_calls_install_wordpress_core" time="0.007" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wordpress_site_then_calls_cli_update_option" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_install_wordpress_site_then_calls_cli_export_database" time="0.006" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_main_given_parameters_must_call_wptools_get_project_structure" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_main_given_parameters_must_call_add_item" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_set_wordpress_config_from_configuration_file_return_when_no_additional_settings" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_set_wordpress_config_from_configuration_file_return_when_no_aws_cloudfront" time="0.003" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_set_wordpress_config_from_configuration_file_when_aws_cloudfront_is_false" time="0.004" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_set_wordpress_config_from_configuration_file_when_aws_cloudfront_is_true" time="0.006" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_add_cloudfront_forwarded_proto_snippet_when_wpconfig_not_exists" time="0.005" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_add_cloudfront_forwarded_proto_snippet_when_wpconfig_exists_calls_re_search_with_pattern" time="0.013" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_add_cloudfront_forwarded_proto_snippet_when_no_match_pattern" time="0.008" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_add_cloudfront_forwarded_proto_snippet_when_match_pattern" time="0.014" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_default_snippet_cloudfront_file_not_exists" time="0.002" /><testcase classname="src.project_types.wordpress.tests.wptools_test" name="test_default_snippet_cloudfront_file_exists" time="0.009" /><testcase classname="src.tools.tests.cli_test" name="test_call_subprocess_given_command_srt_then_calls_popens_with_command" time="0.007" /><testcase classname="src.tools.tests.cli_test" name="test_call_subprocess_given_command_srt_when_stdout_has_lines_then_log_info" time="0.006" /><testcase classname="src.tools.tests.cli_test" name="test_call_subprocess_given_command_srt_when_stderr_has_lines_then_log_error" time="0.004" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_get_devops_toolset_calls_get_devops_toolset_resource" time="0.017"><failure message="AssertionError: 'get' does not contain all of (call('https://github.com/aheadlabs/devops-toolset/archive/master.zip', allow_redirects=True),) in its call list, found [call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop()] instead">git_mock = &lt;MagicMock name='purge_gitkeep' id='2521294135200'&gt;, remove_mock = &lt;MagicMock name='remove' id='2521294155488'&gt;, rename_mock = &lt;MagicMock name='rename' id='2521294274032'&gt;, path_join_mock = &lt;MagicMock name='join' id='2521294261504'&gt;, logging_mock = &lt;MagicMock name='info' id='2521290452032'&gt;
zipfile_mock = &lt;MagicMock name='ZipFile' id='2521290652544'&gt;, paths = &lt;src.tools.tests.conftest.Paths object at 0x0000024B089052B0&gt;, mocks = &lt;src.conftest.Mocks object at 0x0000024B08E36D90&gt;

    @patch("tools.devops_toolset.ZipFile")
    @patch("logging.info")
    @patch("os.path.join")
    @patch("os.rename")
    @patch("os.remove")
    @patch("tools.git.purge_gitkeep")
    def test_get_devops_toolset_calls_get_devops_toolset_resource(
            git_mock, remove_mock, rename_mock, path_join_mock, logging_mock, zipfile_mock, paths, mocks):
        """ Given destination path, calls the get request of the devops_toolset_download_resource """
        # Arrange
        destination_path = paths.devops_destination_path
        mocks.requests_get_mock.side_effect = mocked_requests_get
        # Act
        with patch(paths.builtins_open, mock_open()):
            sut.get_devops_toolset(destination_path)
            # Assert
            calls = [call(constants.devops_toolset_download_resource, allow_redirects=True)]
&gt;           mocks.requests_get_mock.assert_has_calls(calls, any_order=True)

src\tools\tests\devops_toolset_test.py:32: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;MagicMock name='get' id='2521267994432'&gt;, calls = [call('https://github.com/aheadlabs/devops-toolset/archive/master.zip', allow_redirects=True)], any_order = True

    def assert_has_calls(self, calls, any_order=False):
        """assert the mock has been called with the specified calls.
        The `mock_calls` list is checked for the calls.
    
        If `any_order` is False (the default) then the calls must be
        sequential. There can be extra calls before or after the
        specified calls.
    
        If `any_order` is True then the calls can be in any order, but
        they must all appear in `mock_calls`."""
        expected = [self._call_matcher(c) for c in calls]
        cause = next((e for e in expected if isinstance(e, Exception)), None)
        all_calls = _CallList(self._call_matcher(c) for c in self.mock_calls)
        if not any_order:
            if expected not in all_calls:
                if cause is None:
                    problem = 'Calls not found.'
                else:
                    problem = ('Error processing expected calls.\n'
                               'Errors: {}').format(
                                   [e if isinstance(e, Exception) else None
                                    for e in expected])
                raise AssertionError(
                    f'{problem}\n'
                    f'Expected: {_CallList(calls)}'
                    f'{self._calls_repr(prefix="Actual").rstrip(".")}'
                ) from cause
            return
    
        all_calls = list(all_calls)
    
        not_found = []
        for kall in expected:
            try:
                all_calls.remove(kall)
            except ValueError:
                not_found.append(kall)
        if not_found:
&gt;           raise AssertionError(
                '%r does not contain all of %r in its call list, '
                'found %r instead' % (self._mock_name or 'mock',
                                      tuple(not_found), all_calls)
            ) from cause
E           AssertionError: 'get' does not contain all of (call('https://github.com/aheadlabs/devops-toolset/archive/master.zip', allow_redirects=True),) in its call list, found [call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop(), call.stop()] instead

c:\users\cr_al\appdata\local\programs\python\python39\lib\unittest\mock.py:960: AssertionError</failure></testcase><testcase classname="src.tools.tests.devops_toolset_test" name="test_get_devops_toolset_extracts_all_devops_toolset_path_content_into_destination_path" time="0.044" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_get_devops_toolset_renames_final_destination_folder" time="0.013" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_get_devops_toolset_removes_devops_toolset_path_file" time="0.014" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_get_devops_toolset_calls_purge_gitkeep" time="0.014" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_update_devops_toolset_given_toolset_path_calls_compare_devops_toolset_version" time="0.004" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_update_devops_toolset_given_toolset_path_when_not_latest_version_then_calls_get_devops_toolset" time="0.008" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_update_devops_toolset_given_toolset_path_when_not_exist_toolset_path_then_calls_shutil_rmtree" time="0.004" /><testcase classname="src.tools.tests.devops_toolset_test" name="test_update_devops_toolset_given_toolset_path_when_exist_toolset_path_then_warns" time="0.007" /><testcase classname="src.tools.tests.dicts_test" name="test_filter_keys" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_add_gitignore_exclusion_given_path_when_file_opens_then_appends_exclusion" time="0.006" /><testcase classname="src.tools.tests.git_test" name="test_find_gitignore_exclusion_given_path_when_exclusion_exists_then_returns_true" time="0.005" /><testcase classname="src.tools.tests.git_test" name="test_find_gitignore_exclusion_given_path_when_exclusion_exists_then_returns_false" time="0.005" /><testcase classname="src.tools.tests.git_test" name="test_get_gitignore_path_given_none_when_exists_then_returns_root_gitignore_path" time="0.002" /><testcase classname="src.tools.tests.git_test" name="test_get_gitignore_path_given_none_when_not_exist_then_raises_filenotfounderror" time="0.002" /><testcase classname="src.tools.tests.git_test" name="test_get_gitignore_path_given_file_then_calls_get_filepath_in_tree" time="0.002" /><testcase classname="src.tools.tests.git_test" name="test_git_commit_when_skip_do_nothing" time="0.002" /><testcase classname="src.tools.tests.git_test" name="test_git_commit_when_not_skip_then_call_subprocess" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_git_init_when_skip_do_nothing" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_git_init_when_not_skip_and_not_init_git_then_call_subprocess[False-0]" time="0.002" /><testcase classname="src.tools.tests.git_test" name="test_git_init_when_not_skip_and_not_init_git_then_call_subprocess[True-1]" time="0.005" /><testcase classname="src.tools.tests.git_test" name="test_set_current_branch_simplified_given_branch_and_environment_variable_creates_environment_variable" time="0.005" /><testcase classname="src.tools.tests.git_test" name="test_simplify_branch_name_given_branch_when_root_then_returns_simplified[refs/heads/master-master]" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_simplify_branch_name_given_branch_when_root_then_returns_simplified[refs/pull/1/merge-pull/1]" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_simplify_branch_name_given_branch_when_feature_then_returns_simplified" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_simplify_branch_name_given_branch_when_other_then_returns_original" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_update_gitignore_exclusion_given_regex_when_more_than_1_capture_group_raises_valueerror" time="0.002" /><testcase classname="src.tools.tests.git_test" name="test_update_gitignore_exclusion_given_regex_when_1_capture_group_reads_gitignore" time="0.007" /><testcase classname="src.tools.tests.git_test" name="test_update_gitignore_exclusion_given_regex_when_1_capture_group_writes_gitignore" time="0.012" /><testcase classname="src.tools.tests.git_test" name="test_purge_gitkeep_when_invalid_path_raises_valueerror" time="0.001" /><testcase classname="src.tools.tests.git_test" name="test_purge_gitkeep_when_no_additional_files_remove_not_called" time="0.006" /><testcase classname="src.tools.tests.git_test" name="test_purge_gitkeep_when_directory_not_empty_remove_called" time="0.008" /><testcase classname="src.tools.tests.xcoding_test" name="test_encode" time="0.001" /><testcase classname="src.tools.tests.xcoding_test" name="test_decode" time="0.001" /><testcase classname="src.tools.tests.xmlparser_test" name="test_parse_from_path_when_xml_path_exist_then_calls_et_parse" time="0.000"><skipped type="pytest.skip" message="This test relies on project.xml, which no longer exist..">C:\Workspace\_devops-toolset\src\tools\tests\xmlparser_test.py:11: This test relies on project.xml, which no longer exist..</skipped></testcase><testcase classname="src.tools.tests.xmlparser_test" name="test_parse_from_path_when_xml_path_not_exist_then_assigns_xml_file_as_empty" time="0.003" /><testcase classname="src.tools.tests.xmlparser_test" name="test_parse_from_content_given_content_then_set_xml_file_as_content" time="0.001" /><testcase classname="src.tools.tests.xmlparser_test" name="test_get_attribute_value_given_name_when_xml_file_then_return_find" time="0.001" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_cleanup_given_args_then_should_call_os_rmdir" time="0.004" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_cleanup_given_args_then_should_call_os_remove" time="0.004" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_decompress_toolset_given_paths_should_call_zip_extract_all_to_temp_path" time="0.007" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_decompress_toolset_given_paths_should_move_items_to_destination_path" time="0.010" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_decompress_toolset_given_paths_should_return_internal_full_path_and_temporary_extraction_path" time="0.009" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_download_toolset_given_args_when_not_exist_destination_path_then_create_it" time="0.010" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_download_toolset_given_args_then_write_response_content_to_full_destination_path" time="0.008" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_download_toolset_given_args_then_returns_destination_path_and_full_destination_path" time="0.012" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_is_valid_path_given_path_when_path_is_none_then_return_false" time="0.002" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_is_valid_path_given_path_when_path_strip_is_empty_then_return_false" time="0.001" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_is_valid_path_given_path_when_path_is_valid_then_return_true" time="0.001" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_main_given_args_then_call_download_toolset" time="0.004" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_main_given_args_then_call_decompress_toolset" time="0.004" /><testcase classname="src.toolset.tests.download_devops_toolset_test" name="test_main_given_args_then_call_cleanup" time="0.006" /></testsuite></testsuites>